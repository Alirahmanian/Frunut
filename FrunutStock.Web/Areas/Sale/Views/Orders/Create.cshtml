@model FrunutStock.Model.Models.Order

@{
    ViewBag.Title = "Create";
}

@helper LabelWithMarkRazor(string content)
{
    <label><mark>@content</mark></label>
}
@LabelWithMarkRazor("My custom razor helper")
<h2>Create</h2>
<script src="~/Scripts/jquery-3.1.1.js"></script>
<link href="~/css/Site.css" rel="stylesheet" />
<link href="~/Areas/Sale/Css/sales.css" rel="stylesheet" />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin:10px;">
        <span class="glyphicon glyphicon-hand-left"></span>  @Html.ActionLink("Back to List", "Index") <h3>Order</h3>
        @{
            if (ViewBag.HOrderID != null)
            {
                @Html.Hidden("HOrderID", (object)ViewBag.HOrderID.ToString())
            }
            else
            {
                @Html.Hidden("HOrderID", "")
            }
         }
        <div>
        
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div>
            <div class="col-md-4">
                <!--Left col-->
                <fieldset>
                    <legend>Company:</legend>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CompanyID, "Customer", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @{
                                if (Model != null && Model.ID > 0)
                                {
                                    @Html.DropDownList("CompanyID", null, htmlAttributes: new { @class = "form-control" })
                                }
                                else
                                {
                                    @Html.DropDownList("CompanyID", null, "", htmlAttributes: new { @class = "form-control" })
                                }
                            }
                            
                            @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.OrderdBy, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.OrderdBy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OrderdBy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Cash, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Cash)
                            @Html.ValidationMessageFor(model => model.Cash, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                </fieldset>
            </div>
            <div class="col-md-4">
                <!--Center col-->
                <fieldset>
                    <legend>Dates:</legend>
                    <div class="form-group">
                        @Html.LabelFor(model => model.OrderDate, "Order", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PaymentDate, "Payment", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.PaymentDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PaymentDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LoadingDate, "Loading", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.LoadingDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LoadingDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>
            </div>
            <div class="col-md-4">
                <!-- Right col-->
                <fieldset>
                    <legend>More info.</legend>
                    <div class="form-group">
                        @Html.LabelFor(model => model.EmpoyeeID, "Empoyee", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @{
                                if (Model != null && Model.ID > 0)
                                {
                                    @Html.DropDownList("EmpoyeeID", null, htmlAttributes: new { @class = "form-control" })
                                }
                                else
                                {
                                    @Html.DropDownList("EmpoyeeID", null, "", htmlAttributes: new { @class = "form-control" })
                                }
                            }
                            @Html.ValidationMessageFor(model => model.EmpoyeeID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Transport, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EnumDropDownListFor(model => model.Transport, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Transport, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Coments, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Coments, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Coments, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-4">
                            @{
                                if (Model != null && Model.ID > 0)
                                {
                                    <input type="submit" value="Update order" class="btn bg-primary" />
                                }
                                else
                                {
                                    <input type="submit" value="Create order" class="btn bg-primary" />
                                }
                            }
                            
                        </div>
                    </div>
                 </fieldset>
             </div>
        </div>
       <div id="OrderDetails" class="details" >
           <input type="hidden" id="HOrderDetailId" />
           <h4> Order items </h4>
           <div class="panel panel-info">
               <div class="panel-body">
                   <div class="col-md-1">
                       <label for="ItemGroup">Group</label><br />
                       <select id="ItemGroup" class="form-control" onchange="LoadItems(this)">
                           <option>Select</option>
                       </select>
                       <span class="error">Select item group</span>
                   </div>
                   <div class="col-md-1">
                       <label for="Item">Item</label><br />
                       <span>
                           <select id="Item" class="form-control" onchange="LoadWarehouses(this)">
                               <option>Select</option>
                           </select>
                       </span>
                       <span class="error">Select item</span>
                   </div>
                   <div class="col-md-2">
                       <label for="Warehouse">Warehouse</label><br />
                       <select id="Warehouse" class="form-control">
                           <option>Select</option>
                       </select>
                       <span class="error">Select warehouse</span>
                   </div>
                   <div class="col-md-1">
                       <label for="Boxes">Boxes</label><br />
                       <input type="text" id="Boxes" class="form-control" />
                       <span class="error">Valid quantity boxes required</span>
                   </div>
                   <div class="col-md-1">
                       <label for="ReserveBoxes">Reserve</label><br />
                       <input type="text" id="ReserveBoxes" class="form-control" />
                       <span class="error">Valid quantity reserve boxes required</span>
                   </div>
                   <div class="col-md-1">
                       <label for="ExtraKg">Extra kg</label><br />
                       <input type="text" id="ExtraKg" class="form-control" />
                       <span class="error">Valid extra kg required</span>
                   </div>
                   <div class="col-md-1">
                       <label for="Price">Price/kg</label><br />
                       <input type="text" id="Price" class="form-control" />
                       <span class="error">Valid price required</span>
                   </div>
                   <div class="col-md-1">
                       <label for="ExtendedPrice">Extended price</label><br />
                       <input type="text" id="ExtendedPrice" class="form-control" disabled />
                       <span class="error">Valid extended price required</span>
                   </div>
                   <div class="col-md-2" valign="top">
                       <br />
                       <input id="submit" type="button" value="Add" onclick=" return ValidateOrderDetails()" class="btn bg-primary" />
                   </div>
                  </div>
               </div>
               
               <br />
               <div  id="OrderDetailsForPartial">
                   
                  
                   @*@{
                       if (Model != null && Model.OrderDetails != null)
                       {
                        @Html.Partial("_OrderDetails", Model.OrderDetails);
                           
                       }

                    }*@
                </div>
                <div id="OrderDetailsList"> </div>
           </div>
    </div>
}
<script src="~/Areas/Sale/Scripts/Order.js"></script>


