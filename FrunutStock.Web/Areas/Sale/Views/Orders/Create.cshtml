@model FrunutStock.Model.Models.Order

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<script src="~/Scripts/jquery-3.1.1.js"></script>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal" style="margin:10px;">
        <h4>Order</h4>
        @{
            if (ViewBag.HOrderID != null)
            {
                @Html.Hidden("HOrderID", (object)ViewBag.HOrderID.ToString())
            }
            else
            {
                @Html.Hidden("HOrderID", "")
            }
                }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <fieldset>
            <legend>Company:</legend>


            <div class="form-group">
                @Html.LabelFor(model => model.CompanyID, "Company", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CompanyID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrderdBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrderdBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OrderdBy, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>
            <div class="form-group">
                @Html.LabelFor(model => model.EmpoyeeID, "Empoyee", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("EmpoyeeID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EmpoyeeID, "", new { @class = "text-danger" })
                </div>
            </div>
      
                 <div class="form-group">
                     @Html.LabelFor(model => model.Transport, htmlAttributes: new { @class = "control-label col-md-2" })
                     <div class="col-md-10">
                         @Html.EnumDropDownListFor(model => model.Transport, htmlAttributes: new { @class = "form-control" })
                         @Html.ValidationMessageFor(model => model.Transport, "", new { @class = "text-danger" })
                     </div>
                 </div>
                 <div class="form-group">
                     @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
                     <div class="col-md-10">
                         @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control" } })
                         @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
                     </div>
                 </div>
            
                 <div class="form-group">
                     @Html.LabelFor(model => model.PaymentDate, htmlAttributes: new { @class = "control-label col-md-2" })
                     <div class="col-md-10">
                         @Html.EditorFor(model => model.PaymentDate, new { htmlAttributes = new { @class = "form-control" } })
                         @Html.ValidationMessageFor(model => model.PaymentDate, "", new { @class = "text-danger" })
                     </div>
                 </div>
             
                 <div class="form-group">
                     @Html.LabelFor(model => model.LoadingDate, htmlAttributes: new { @class = "control-label col-md-2" })
                     <div class="col-md-10">
                         @Html.EditorFor(model => model.LoadingDate, new { htmlAttributes = new { @class = "form-control" } })
                         @Html.ValidationMessageFor(model => model.LoadingDate, "", new { @class = "text-danger" })
                     </div>
                 </div>
            
                 <div class="form-group">
                     @Html.LabelFor(model => model.Coments, htmlAttributes: new { @class = "control-label col-md-2" })
                     <div class="col-md-10">
                         @Html.EditorFor(model => model.Coments, new { htmlAttributes = new { @class = "form-control" } })
                         @Html.ValidationMessageFor(model => model.Coments, "", new { @class = "text-danger" })
                     </div>
                 </div>
             
                <div class="form-group">
                    @Html.LabelFor(model => model.Cash, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                      @Html.EditorFor(model => model.Cash)
                      @Html.ValidationMessageFor(model => model.Cash, "", new { @class = "text-danger" })
                    </div>
                </div>
            
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create order"  class="btn btn-success" />
                    </div>
                </div>
    
       <div id="OrderDetails" class="details">
           <h2> Order items </h2>
           <div style="background-color:beige;">
          
               <table class="table-responsive" style="border-collapse:separate; border-spacing:10px 10px;">
                   <tr>
                       <td>Group</td>
                       <td>Item</td>
                       <td>Warehouse</td>
                       <td>Boxes</td>
                       <td>Resereve</td>
                       <td>Extra kg</td>
                       <td>Price/kg</td>
                       <td>Extended price</td>
                       <td></td>
                   </tr>
                   <tr class="mycontainer" id="mainrow">
                       <td>
                           <select id="ItemGroup" class="form-control" onchange="LoadItems(this)">
                               <option>Select</option>
                           </select>
                           <span class="error">Select item group</span>
                       </td>
                       <td>
                           <select id="Item" class="form-control" onchange="LoadWarehouses(this)">
                               <option>Select</option>
                           </select>
                           <span class="error">Select item</span>
                       </td>
                       <td>
                           <select id="Warehouse" class="form-control">
                               <option>Select</option>
                           </select>
                           <span class="error">Select warehouse</span>
                       </td>
                       <td>
                           <input type="text" id="Boxes" class="form-control" />
                           <span class="error">Valid quantity boxes required</span>
                       </td>
                       <td>
                           <input type="text" id="ReserveBoxes" class="form-control" />
                           <span class="error">Valid quantity reserve boxes required</span>
                       </td>
                       <td>
                           <input type="text" id="ExtraKg" class="form-control" />
                           <span class="error">Valid extra kg required</span>
                       </td>
                       <td>
                           <input type="text" id="Price" class="form-control" />
                           <span class="error">Valid price required</span>
                       </td>
                       <td>
                           <input type="text" id="ExtendedPrice" class="form-control" />
                           <span class="error">Valid extended price required</span>
                       </td>
                       <td valign="top">
                           <div>
                               <input id="submit" type="button" value="Add" onclick="return ValidateOrderDetails()" class="btn btn-warning" />
                           </div>
                       </td>
                   </tr>
               </table>
           </div>
           <div class="container">
             <div class="table-responsive">
               <table class="table-striped table-bordered" id="orderDetailsTable">
                   <thead>
                       <tr>
                           <td>Item</td>
                           <td>Warehouse</td>
                           <td>Boxes</td>
                           <td>Resereve</td>
                           <td>Extra kg</td>
                           <td>Price/kg</td>
                           <td>Extended price</td>
                           
                       </tr>
                   </thead>
                   <tbody></tbody>
               </table>
          
            </div>
           </div>

          
        </div>
       
    </div>
   
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Areas/Sale/Scripts/Order.js"></script>

<style>
  span.error {
   display:block;
   visibility:hidden;
   color:red;
   font-size:90%;
   }
  tr.error {
   background-color:rgba(255,0,0,0.35);
   
   }

</style>
